name: Publish to PyPi

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'poetry'

    - name: Install Poetry
      run: pipx install poetry

    - name: Install dependencies
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        poetry install

    - name: Build distribution
      run: poetry build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  test:
    name: Test
    uses: ./.github/workflows/test.yml
    with:
      test-args: '--all'

  # === Publish to TestPyPI === #
  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    environment:
      name: testpypi
      url: https://test.pypi.org/p/cycleformers

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  # === Publish to PyPi === #
  publish-to-pypi:
    name: Publish to PyPi
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: pypi
      url: https://pypi.org/project/cycleformers/
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  # === Create GitHub Release === #
  github-release:
    name: Sign Python distribution and upload to GitHub Releases
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.1.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  documentation:
    name: Build & deploy documentation
    uses: ./.github/workflows/build-docs.yml
